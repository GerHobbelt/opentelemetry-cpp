module(
    name = "opentelemetry-cpp",
    version = "1.16.0-dll",
    repo_name = "io_opentelemetry_cpp",
)

bazel_dep(name = "curl", version = "8.8.0")
bazel_dep(name = "abseil-cpp", version = "20240116.2")
bazel_dep(name = "aspect_bazel_lib", version = "2.7.8")

bazel_dep(name = "rules_pkg", version = "1.0.1", dev_dependency = True)

bazel_dep(name = "rules_python", version = "0.34.0")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.10")

bazel_dep(name = "google_benchmark", version = "1.8.4", dev_dependency = True)
bazel_dep(name = "googletest", version = "1.14.0.bcr.1", dev_dependency = True)

bazel_dep(name = "nlohmann_json", version = "3.11.3")

# Still needs repo_name="com_github_grpc_grpc" due to
#
#   ERROR: no such package '@@[unknown repo 'com_github_grpc_grpc' requested from @@]//src/compiler':
#           The repository '@@[unknown repo 'com_github_grpc_grpc' requested from @@]' could not be resolved:
#                 No repository visible as '@com_github_grpc_grpc' from main repository
#
bazel_dep(name = "grpc", version = "1.65.0", repo_name = "com_github_grpc_grpc")
bazel_dep(name = "opentelemetry-proto", version = "1.3.2")
archive_override(
    module_name = "opentelemetry-proto",
    integrity = "sha256-wGnA2WE3zwBdNEEfpn3TtvH4xkrx5/sv4AiaQcQlrNc=",
    patch_strip = 1,
    # Copied from https://github.com/bazelbuild/bazel-central-registry/tree/main/modules/opentelemetry-proto/1.3.1/patches
    patches = ["bazel/opentelemetry-proto.patch"],
    strip_prefix = "opentelemetry-proto-1.3.2",
    urls = "https://github.com/open-telemetry/opentelemetry-proto/archive/refs/tags/v1.3.2.tar.gz",
)

bazel_dep(name = "prometheus-cpp", version = "1.3.0")
archive_override(
    module_name = "prometheus-cpp",
    integrity = "sha256-uElFYvmIrzXsElYbbrNS0Mvtfj99aKae2nhsZhCvxG4=",
    strip_prefix = "prometheus-cpp-6492e820cdff7e7345d46d82b43735aaea542098",
    urls = "https://github.com/jupp0r/prometheus-cpp/archive/6492e820cdff7e7345d46d82b43735aaea542098.zip",
)

bazel_dep(name = "boringssl", version = "0.0.0-20240530-2db0eb3")
bazel_dep(name = "zlib", version = "1.3.1.bcr.1")
bazel_dep(name = "rules_proto", version = "6.0.2")

use_repo(
    use_extension("//bazel:repository.bzl", "deps1"),
    "ftxui",
    "graf_w64",
    "loki_w64",
    "otel_w64",
    "prom_w64",
    "sentry_cli_windows_amd64",
    "tempo_w64",
)

cc_configure = use_extension("@bazel_tools//tools/cpp:cc_configure.bzl", "cc_configure_extension")
use_repo(cc_configure, "local_config_cc")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    # The only reason we explicitly load `rules_python` is to make ignore_root_user_error = True
    # This allows it to run on cloud clients, where root is the user.
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.12",
)

bazel_dep(name = "depend_on_what_you_use", version = "0.4.0")
